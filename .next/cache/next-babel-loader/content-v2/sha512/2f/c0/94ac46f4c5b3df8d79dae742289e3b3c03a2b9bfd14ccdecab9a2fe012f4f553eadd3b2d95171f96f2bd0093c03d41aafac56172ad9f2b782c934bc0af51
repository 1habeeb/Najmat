{"ast":null,"code":"import _regeneratorRuntime from \"/Users/i0h1m/Desktop/najmat-nextjs - - - DON'T/najmat with-mongodb/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/i0h1m/Desktop/najmat-nextjs - - - DON'T/najmat with-mongodb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useContext, createContext } from \"react\";\nimport nookies from \"nookies\";\nimport firebaseClient from \"./firebaseClient\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nvar AuthContext = /*#__PURE__*/createContext({});\nexport var AuthProvider = function AuthProvider(_ref) {\n  var children = _ref.children;\n  firebaseClient();\n\n  var _useState = useState(null),\n      user = _useState[0],\n      setUser = _useState[1];\n\n  useEffect(function () {\n    return firebase.auth().onIdTokenChanged( /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(user) {\n        var token;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (user) {\n                  _context.next = 4;\n                  break;\n                }\n\n                setUser(null);\n                nookies.set(undefined, \"token\", \"\", {});\n                return _context.abrupt(\"return\");\n\n              case 4:\n                _context.next = 6;\n                return user.getIdToken();\n\n              case 6:\n                token = _context.sent;\n                setUser(user);\n                nookies.set(undefined, \"token\", token, {});\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n  }, []);\n  return __jsx(AuthContext.Provider, {\n    value: {\n      user: user\n    }\n  });\n};\nexport var useAuth = function useAuth() {\n  return useContext(AuthContext);\n};","map":null,"metadata":{},"sourceType":"module"}