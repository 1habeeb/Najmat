{"ast":null,"code":"var _jsxFileName = \"/Users/i0h1m/Desktop/najmat-nextjs - - - DON'T/najmat with-mongodb/auth.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useContext, createContext } from \"react\";\nimport nookies from \"nookies\";\nimport firebaseClient from \"./firebaseClient\";\nimport firebase from \"firebase/App\";\nimport \"firebase/auth\";\nconst AuthContext = /*#__PURE__*/createContext({});\nexport const AuthProvider = ({\n  children\n}) => {\n  firebaseClient();\n  const {\n    0: user,\n    1: setUser\n  } = useState(null);\n  useEffect(() => {\n    return firebase.auth().onIdTokenChanged(async user => {\n      if (!user) {\n        setUser(null);\n        nookies.set(undefined, \"token\", \"\", {});\n        return;\n      }\n\n      const token = await user.getIdToken();\n      setUser(user);\n      nookies.set(undefined, \"token\", token, {});\n    });\n  }, []);\n  return __jsx(AuthContext.Provider, {\n    value: {\n      user\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }\n  });\n};\nexport const useAuth = () => useContext(AuthContext);","map":{"version":3,"sources":["/Users/i0h1m/Desktop/najmat-nextjs - - - DON'T/najmat with-mongodb/auth.js"],"names":["React","useState","useEffect","useContext","createContext","nookies","firebaseClient","firebase","AuthContext","AuthProvider","children","user","setUser","auth","onIdTokenChanged","set","undefined","token","getIdToken","useAuth"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,UAApC,EAAgDC,aAAhD,QAAoE,OAApE;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AAEA,MAAMC,WAAW,gBAAGJ,aAAa,CAAC,EAAD,CAAjC;AAEA,OAAO,MAAMK,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AACxCJ,EAAAA,cAAc;AACd,QAAM;AAAA,OAACK,IAAD;AAAA,OAAOC;AAAP,MAAkBX,QAAQ,CAAC,IAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,WAAOK,QAAQ,CAACM,IAAT,GAAgBC,gBAAhB,CAAiC,MAAOH,IAAP,IAAgB;AACpD,UAAG,CAACA,IAAJ,EAAS;AACLC,QAAAA,OAAO,CAAC,IAAD,CAAP;AACAP,QAAAA,OAAO,CAACU,GAAR,CAAYC,SAAZ,EAAuB,OAAvB,EAAgC,EAAhC,EAAoC,EAApC;AACA;AACH;;AACD,YAAMC,KAAK,GAAG,MAAMN,IAAI,CAACO,UAAL,EAApB;AACAN,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAN,MAAAA,OAAO,CAACU,GAAR,CAAYC,SAAZ,EAAuB,OAAvB,EAAgCC,KAAhC,EAAwC,EAAxC;AACH,KATM,CAAP;AAUH,GAXQ,EAWP,EAXO,CAAT;AAYA,SAAO,MAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACN,MAAAA;AAAD,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAIH,CApBM;AAsBP,OAAO,MAAMQ,OAAO,GAAG,MAAMhB,UAAU,CAACK,WAAD,CAAhC","sourcesContent":["import React, {useState, useEffect, useContext, createContext} from \"react\";\nimport nookies from \"nookies\";\nimport firebaseClient from \"./firebaseClient\";\nimport firebase from \"firebase/App\";\nimport \"firebase/auth\";\n\nconst AuthContext = createContext({});\n\nexport const AuthProvider = ({children}) => {\n    firebaseClient();\n    const [user, setUser] = useState(null);\n\n    useEffect(() => {\n        return firebase.auth().onIdTokenChanged(async (user) => {\n            if(!user){\n                setUser(null);\n                nookies.set(undefined, \"token\", \"\", {});\n                return;\n            }\n            const token = await user.getIdToken();\n            setUser(user);\n            nookies.set(undefined, \"token\", token , {})\n        })\n    },[]);\n    return(<AuthContext.Provider value={{user}}>\n\n    </AuthContext.Provider>\n    );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n"]},"metadata":{},"sourceType":"module"}