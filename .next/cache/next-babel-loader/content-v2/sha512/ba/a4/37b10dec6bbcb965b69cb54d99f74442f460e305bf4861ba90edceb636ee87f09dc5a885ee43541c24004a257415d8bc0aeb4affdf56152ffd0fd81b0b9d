{"ast":null,"code":"var _jsxFileName = \"/Users/i0h1m/Desktop/najmat-nextjs - - - DON'T/najmat with-mongodb/pages/Process.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport Layout from '../compoenets/layout';\nexport var __N_SSG = true;\nexport default function Top(_ref) {\n  var _this = this;\n\n  var movies = _ref.movies;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, \"Top 1000 Movies of All Time\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, __jsx(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, \"(According to Metacritic)\")), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, movies.map(function (movie) {\n    return __jsx(\"li\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }\n    }, __jsx(\"h2\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }\n    }, movie.title), __jsx(\"h3\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, movie.metacritic), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }, movie.plot));\n  })));\n}\n_c = Top;\n\nvar _c;\n\n$RefreshReg$(_c, \"Top\");","map":{"version":3,"sources":["/Users/i0h1m/Desktop/najmat-nextjs - - - DON'T/najmat with-mongodb/pages/Process.js"],"names":["useState","Layout","Top","movies","map","movie","title","metacritic","plot"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAGA,eAAe,SAASC,GAAT,OAAyB;AAAA;;AAAA,MAAVC,MAAU,QAAVA,MAAU;AACtC,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,CAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,MAAM,CAACC,GAAP,CAAW,UAACC,KAAD;AAAA,WACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,KAAK,CAACC,KAAX,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,KAAK,CAACE,UAAX,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIF,KAAK,CAACG,IAAV,CAHF,CADU;AAAA,GAAX,CADH,CALF,CADF;AAiBD;KAlBuBN,G","sourcesContent":["import { useState } from \"react\"\nimport Layout from '../compoenets/layout'\nimport { connectToDatabase } from \"../util/mongodb\";\n\nexport default function Top({ movies }) {\n  return (\n    <div>\n      <h1>Top 1000 Movies of All Time</h1>\n      <p>\n        <small>(According to Metacritic)</small>\n      </p>\n      <ul>\n        {movies.map((movie) => (\n          <li>\n            <h2>{movie.title}</h2>\n            <h3>{movie.metacritic}</h3>\n            <p>{movie.plot}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport async function getStaticProps() {\n  const { db } = await connectToDatabase();\n\n  const movies = await db\n    .collection(\"movies\")\n    .find({})\n    .sort({ metacritic: -1 })\n    .limit(10)\n    .toArray();\n\n  return {\n    props: {\n      movies: JSON.parse(JSON.stringify(movies)),\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}