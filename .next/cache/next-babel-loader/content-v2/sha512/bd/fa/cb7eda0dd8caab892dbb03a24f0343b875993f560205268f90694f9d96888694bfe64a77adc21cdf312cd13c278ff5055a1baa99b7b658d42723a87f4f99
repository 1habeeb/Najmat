{"ast":null,"code":"import connectDB from '../../middleware/mongodb';\nimport bcrypt from '../../middleware/bcrypt';\nimport User from '../../models/user';\n\nconst handler = async (req, res) => {\n  if (req.method === 'POST') {\n    // Check if name, email or password is provided\n    const {\n      name,\n      email,\n      password\n    } = req.body;\n\n    if (name && email && password) {\n      try {\n        // Hash password to store it in DB\n        var passwordhash = await bcrypt.sign(password);\n        var user = new User({\n          name,\n          email,\n          password: passwordhash\n        }); // Create new user\n\n        var usercreated = await user.save();\n        return res.status(200).send(usercreated);\n      } catch (error) {\n        return res.status(500).send(error.message);\n      }\n    } else {\n      res.status(422).send('data_incomplete');\n    }\n  } else {\n    res.status(422).send('req_method_not_supported');\n  }\n};\n\nexport default connectDB(handler);","map":{"version":3,"sources":["/Users/i0h1m/Desktop/najmat-nextjs - - - DON'T/najmat with-mongodb/pages/api/user.js"],"names":["connectDB","bcrypt","User","handler","req","res","method","name","email","password","body","passwordhash","sign","user","usercreated","save","status","send","error","message"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,0BAAtB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;AAEA,MAAMC,OAAO,GAAG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAClC,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AACzB;AACA,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA;AAAf,QAA4BL,GAAG,CAACM,IAAtC;;AACA,QAAIH,IAAI,IAAIC,KAAR,IAAiBC,QAArB,EAA+B;AAC3B,UAAI;AACF;AACA,YAAIE,YAAY,GAAG,MAAMV,MAAM,CAACW,IAAP,CAAYH,QAAZ,CAAzB;AACA,YAAII,IAAI,GAAG,IAAIX,IAAJ,CAAS;AAClBK,UAAAA,IADkB;AAElBC,UAAAA,KAFkB;AAGlBC,UAAAA,QAAQ,EAAEE;AAHQ,SAAT,CAAX,CAHE,CAQF;;AACA,YAAIG,WAAW,GAAG,MAAMD,IAAI,CAACE,IAAL,EAAxB;AACA,eAAOV,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBH,WAArB,CAAP;AACD,OAXD,CAWE,OAAOI,KAAP,EAAc;AACd,eAAOb,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,KAAK,CAACC,OAA3B,CAAP;AACD;AACF,KAfH,MAeS;AACLd,MAAAA,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,iBAArB;AACD;AACJ,GArBD,MAqBO;AACLZ,IAAAA,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,0BAArB;AACD;AACF,CAzBD;;AA2BA,eAAejB,SAAS,CAACG,OAAD,CAAxB","sourcesContent":["import connectDB from '../../middleware/mongodb';\nimport bcrypt from '../../middleware/bcrypt';\nimport User from '../../models/user';\n\nconst handler = async (req, res) => {\n  if (req.method === 'POST') {\n    // Check if name, email or password is provided\n    const { name, email, password } = req.body;\n    if (name && email && password) {\n        try {\n          // Hash password to store it in DB\n          var passwordhash = await bcrypt.sign(password);\n          var user = new User({\n            name,\n            email,\n            password: passwordhash,\n          });\n          // Create new user\n          var usercreated = await user.save();\n          return res.status(200).send(usercreated);\n        } catch (error) {\n          return res.status(500).send(error.message);\n        }\n      } else {\n        res.status(422).send('data_incomplete');\n      }\n  } else {\n    res.status(422).send('req_method_not_supported');\n  }\n};\n\nexport default connectDB(handler);"]},"metadata":{},"sourceType":"module"}